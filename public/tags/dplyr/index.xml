<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dplyr on Suzan</title>
    <link>/tags/dplyr/</link>
    <description>Recent content in Dplyr on Suzan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 02 Apr 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/dplyr/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Data Wrangling Part 4: Summarizing and slicing your data</title>
      <link>/2018/04/dplyr-tutorial-4/</link>
      <pubDate>Mon, 02 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/04/dplyr-tutorial-4/</guid>
      <description>This is the fourth blog post in a series of dplyr tutorials. In this tutorial we will summarizing our data: i) counting cases and observations, ii) creating summaries using summarise() and it&amp;rsquo;s summarise_all(), _if() and _at() variants, and iii) pulling the maximum and minimum row values.
Content:
   Counting cases and adding counts  Counting the number of observations Adding the number of observations in a column  Summarising data  Summarise all Summarise if Summarise at  Arranging rows Showing only part of your data  The 5 lowest and highest values A random selection of rows A user-defined slice of rows    Note: as per previous blog posts, I will present everything in the form of a pipe.</description>
    </item>
    
    <item>
      <title>Data Wrangling Part 3: Basic and more advanced ways to filter rows</title>
      <link>/2018/02/dplyr-tutorial-3/</link>
      <pubDate>Tue, 27 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/02/dplyr-tutorial-3/</guid>
      <description>This is the third blog post in a series of dplyr tutorials:
 Part 1: Basic to Advanced Ways to Select Columns Part 2: Transforming your columns into the right shape  
Content:
 Basic row filters  Filtering rows based on a numeric variable Filtering based on a exact character variable matches Filtering rows based on regex Filtering based on multiple conditions Filtering out empty rows  Filtering across multiple columns  Filter_all Filter_if Filter_at    The data</description>
    </item>
    
    <item>
      <title>Data Wrangling Part 2: Transforming your columns into the right shape</title>
      <link>/2018/02/dplyr-tutorial-2/</link>
      <pubDate>Fri, 02 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/02/dplyr-tutorial-2/</guid>
      <description>This is a second post in a series of dplyr functions. The first one covered basic and advanced ways to select, rename and reorder columns,and can be found here: Data Wrangling Part 1
This second one covers tools to manipulate your columns to get them the way you want them.
 Mutating columns: the basics Mutating several columns at once  Mutate_all Mutate_if Mutate_at to change specific columns**](#mutate_at-to-change-specifc-columns)  Working with discrete columns  Recoding discrete columns Creating new discrete column (two levels) Creating new discrete column (multiple levels)  Splitting and merging columns Bringing in columns from other data tables Spreading and gathering data Turning data into NA</description>
    </item>
    
    <item>
      <title>Data Wrangling Part 1: Basic to Advanced Ways to Select Columns</title>
      <link>/2018/01/dplyr-tutorial-1/</link>
      <pubDate>Wed, 31 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/01/dplyr-tutorial-1/</guid>
      <description>I went through the entire dplyr documentation for a talk last week about pipes, which resulted in a few &amp;ldquo;aha!&amp;rdquo; moments. I discovered and re-discovered a few useful functions, which I wanted to collect in a few blog posts so I can share them with others.
This first post will cover ordering, naming and selecting columns. The next post will be about recoding and transforming columns, and after that I will move on to row selection.</description>
    </item>
    
  </channel>
</rss>